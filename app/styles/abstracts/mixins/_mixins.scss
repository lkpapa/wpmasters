// ------------------------------------
//
// Mixins
//
// ------------------------------------


@mixin button {
  position: relative;
  font-family: $font-button;
  font-size: 17px;
  line-height: normal;
  border-radius: 40px;
  padding: 18px 45px;
  color: $color-button-text;
  display: inline-block;
  transition: all 0.3s linear;
}

@mixin button-default {
  @include button;
  background-color: $color-button-default-bg;

  &:hover {
    background-color: $color-button-default-bg-hover;
  }
}

@mixin button-alt {
  @include button;
  position: relative;
  box-shadow: inset 0 0 0 2px $color-white;
  overflow: hidden;
  z-index:0;
  

  &::before {
    content: "";
    position: absolute;
    z-index:-1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: linear-gradient(135deg, rgba(238,106,60,1) 0%, rgba(246,193,78,1) 100%);
    opacity: 0;
    transition: 0.3s;
  }
  &:hover::before {
    opacity: 1;
  }
}

@mixin button-clean {
  @include button;

  &::after {
    content: '';
    background-image: url('https://wpmasters20.kinsta.cloud/wp-content/themes/wp-masters/assets/images/icons/arrow-right.svg');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    height: 7px;
    width: 15px;
    display: block;
    position: absolute;
    right: 20px;
    top: 3px;
    bottom: 0;
    margin: auto;
    transition: all 0.2s linear;
  }
  &:hover::after {
    right: 15px;
  }
}

@mixin gradient-primary {
  background: rgb(238,106,60);
  background: -moz-linear-gradient(135deg, rgba(238,106,60,1) 0%, rgba(246,193,78,1) 100%);
  background: -webkit-linear-gradient(135deg, rgba(238,106,60,1) 0%, rgba(246,193,78,1) 100%);
  background: linear-gradient(135deg, rgba(238,106,60,1) 0%, rgba(246,193,78,1) 100%);
}

@mixin hover-underline {
  &::after {
    display: block;
    content: '';
    border-bottom: solid 1px $color-text-light;  
    transform: scaleX(0);  
    transform-origin:  0% 50%;
    transition: transform 250ms ease-in-out;
  }
  &:hover:after { 
    transform: scaleX(1); 
  }
}
@mixin breakpoint($userValues){
  @each $userValue in $userValues {
  $my-map:map-get($breakpoints,$userValue);
  @if $my-map{
     @media(#{$my-map}){
      @content;
     }
  }@else{
    @error "oops seems like break point #{$user-value} is not defind yet"
  }
}
}

@mixin gridInner($col,$row){
  display: grid;
  grid-template-columns: repeat($col, minmax(25%, auto));
  grid-template-rows:$row;
  max-width: 100%;
  width: var(--max-width);
}
@mixin flexInner($width,$justifyContent,$alignContent,$gab){
  display: flex;
  justify-content: $justifyContent;
  align-items: $alignContent;
  gap: $gab;
  width: $width;
}
@mixin mdcol($col,$width){
  width: $width/$col;
}